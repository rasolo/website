<?xml version="1.0" encoding="utf-8"?>
<Content Key="d1fe69b7-4aef-4085-b46a-db9ab8139b71" Alias="Map crop url" Level="4">
  <Info>
    <Parent Key="fa6439c3-1697-4002-919b-13d88db5a30f">Umbraco</Parent>
    <Path>/Start/Blogs/Umbraco/MapCropUrl</Path>
    <Trashed>false</Trashed>
    <ContentType>blogPostPage</ContentType>
    <CreateDate>2019-10-23T16:09:50</CreateDate>
    <NodeName Default="Map crop url" />
    <SortOrder>4</SortOrder>
    <Published Default="true" />
    <Schedule />
    <Template Key="58a30bec-739d-43b7-b66f-85ca2620dd3e">BlogPostPage</Template>
  </Info>
  <Properties>
    <heroImage>
      <Value><![CDATA[]]></Value>
    </heroImage>
    <mainBody>
      <Value><![CDATA[<p><strong>Update 2020-09-13:</strong></p>
<p>For Umbraco 8.6.4 and above the last line in MapFromImageCropperAttribute looks like this:</p>
<pre>property.SetValue(model, imageCropperValue.Src + imageCropperValue.GetCropUrl(CropName, Current.ImageUrlGenerator, useFocalPoint: true));</pre>
<p>On my Blog post pages I have a Image Cropper property editor for a property called TeaserMedia, which is used for the images on the start page. On the editor I have defined a media crop alias "startPage" which is 500x500. In my code I retrieve all of the blog posts as IPublishedContent and map them to a view model. The problem was that I had to foreach every item and run .GetCropUrl() for every blog post as IPublishedContent in order to retrieve the crop urls. I did not want to loop and simply use UmbracoMapper.MapCollection and be done with it. I checked the documentation on <a href="https://github.com/AndyButland/UmbracoMapper">Andy Butland's readme on GitHub</a> but could not find anything. So I simply created a issue and asked Andy if it was possible, and not even an hour later I got an answer!<br /><br />So what you need to do is create an attribute that implements IMapFromAttribute:</p>
<pre>using System;<br />using System.Reflection;<br />using Umbraco.Core.PropertyEditors.ValueConverters;<br />using Zone.UmbracoMapper.V8;<br />using Zone.UmbracoMapper.V8.Attributes;<br /><br />namespace Rasolo.Core.Features.Shared.Attributes<br />{<br />   [AttributeUsage(AttributeTargets.Property)]<br />   public class MapFromImageCropperAttribute : Attribute, IMapFromAttribute<br />   {<br />     public string CropName { get; set; }<br /><br />     public void SetPropertyValue&lt;T&gt;(object fromObject, PropertyInfo property, T model, IUmbracoMapper mapper)<br />     {<br />        var imageCropperValue = fromObject as ImageCropperValue;<br />        if (imageCropperValue == null)<br />         {<br />            return;<br />         }<br /><br />        property.SetValue(model, imageCropperValue.Src + imageCropperValue.GetCropUrl(CropName));<br />     }<br />  }<br />}</pre>
<p>and then I have created a property called TeaserMediaUrl for the url of the cropped image on the page.<br />On the property I have two attributes:</p>
<ol>
<li>Property mapping</li>
<li>MapFromImageCropper</li>
</ol>
<p>Property mapping to tell it to map to the source property which is the TeaserMedia property of ImageCropper.<br />MapFromImageCropper which is the newly created Attribute telling it which crop it is I want to map to. The property looks like this:</p>
<pre><br /><sub>[PropertyMapping(SourceProperty = BlogPostPagePropertyAlias.TeaserMedia)]</sub><br /><sub>[MapFromImageCropper(CropName = BlogPostPageMediaCropAliases.StartPage)]</sub><br /><sub>public string TeaserMediaUrl { get; set; }</sub></pre>
<p>Where "BlogPostPagePropertyAlias.TeaserMedia" is simply a constant string with the value "teaserMedia" and "BlogPostPageMediaCropAlias.StartPage" is also a constant string of "startPage" which is the crop alias.<br /><br />Now this property will automatically be mapped with the url to the cropped image. Now I can use UmbracoMapper.MapCollection and be done with it!<br /><br />All credit goes to Andy Butland and <a href="https://github.com/21robin12" class="user-mention" data-octo-dimensions="link_type:self" data-octo-click="hovercard-link-click" data-hovercard-url="/hovercards?user_id=5615322" data-hovercard-type="user">21robin12</a><span> on GitHub!</span> </p>]]></Value>
    </mainBody>
    <metaDescription>
      <Value><![CDATA[How to map a certain crop on a property for the document type from the ImageCropper property editor.]]></Value>
    </metaDescription>
    <metaTitle>
      <Value><![CDATA[]]></Value>
    </metaTitle>
    <preamble>
      <Value><![CDATA[An explanation on how you can map your image cropper property directly using an attribute.]]></Value>
    </preamble>
    <teaserHeading>
      <Value><![CDATA[]]></Value>
    </teaserHeading>
    <teaserMedia>
      <Value><![CDATA[{"src":"/media/cevfwcyy/earth_atmosphere_horizon_4k-2560x1440.jpg","focalPoint":{"left":0.5,"top":0.5},"crops":[{"alias":"startPage","width":500,"height":500,"coordinates":null}]}]]></Value>
    </teaserMedia>
    <teaserMediaAltText>
      <Value><![CDATA[]]></Value>
    </teaserMediaAltText>
    <title>
      <Value><![CDATA[How to map GetCropUrl in Umbraco]]></Value>
    </title>
  </Properties>
</Content>