<?xml version="1.0" encoding="utf-8"?>
<Content Key="f815d513-8947-4b16-bae6-6dab43c1a4de" Alias="How to redirect a naked http domain to an ssl protected www" Level="4">
  <Info>
    <Parent Key="3d755841-c847-4721-82c8-1a60407eac63">IT</Parent>
    <Path>/Start/Blogs/IT/HowToRedirectANakedHttpDomainToAnSslProtectedWww</Path>
    <Trashed>false</Trashed>
    <ContentType>blogPostPage</ContentType>
    <CreateDate>2020-02-08T23:04:43</CreateDate>
    <NodeName Default="How to redirect a naked http domain to an ssl protected www" />
    <SortOrder>7</SortOrder>
    <Published Default="true" />
    <Schedule />
    <Template Key="58a30bec-739d-43b7-b66f-85ca2620dd3e">BlogPostPage</Template>
  </Info>
  <Properties>
    <heroImage>
      <Value><![CDATA[]]></Value>
    </heroImage>
    <mainBody>
      <Value><![CDATA[<p>I had just activated the shared hosting plan in Azure in order to try out a custom domain with HTTPS. My hand was forced to use the shared hosting plan since the tier below that allows you to buy a custom domain, but not use HTTPS. This is sneaky in my opinion since a custom domain is pretty useless without HTTPS when all browsers gives a warning and prevents you from entering the site if it lacks a certificate. Anyway.</p>
<p>Azure does not provide you with HTTPS for the naked url (the naked url is the url without www, eg: <a href="http://domain.com">http://domain.com</a> is naked whereas <a href="http://www.domain.com">http://www.domain.com </a>is not). Since users would get a huge warning from browsers and prevent them from entering if they go to my website using the naked url I wanted to redirect from the naked to the "clothed" (www) url. It refused to work.</p>
<p><strong>The solution was to activate ssl</strong> <strong>on the naked url</strong> by using Let's Encrypt. <span style="text-decoration: underline;">Redirects will only work if the domain has a certificat</span><span style="text-decoration: underline;">e</span> apparently. I had tried Let's Encrypt for hours before without success until finally discovering that you need the shared or higher hosting plan for Let's Encrypt or any kind of SSL to work. I used the Let's Encrypt site extension <a href="https://github.com/sjkp/letsencrypt-siteextension" title="https://github.com/sjkp/letsencrypt-siteextension">https://github.com/sjkp/letsencrypt-siteextension </a>to get it to work. (The letsencrypt-webapp-renewer <a href="https://github.com/ohadschn/letsencrypt-webapp-renewer" title="https://github.com/ohadschn/letsencrypt-webapp-renewer">https://github.com/ohadschn/letsencrypt-webapp-renewer </a>does not work right now 2020-02-09) It worked perfectly the first try and only the naked domain got the Let's Encrypt certificate, the "clothed" domain was left alone and keeps it's Azure certificate.</p>
<p>Below are redirects that works to redirect from both HTTP and HTTPS to www, with the lower rule being for HTTPS. <strong>Replace domain.com with your domain. </strong></p>
<div style="color: #d4d4d4; background-color: #1e1e1e; font-family: Consolas, 'Courier New', monospace; font-weight: normal; font-size: 14px; line-height: 19px; white-space: pre;">
<div>&lt;rule name="Redirect domain.com to www.domain.com HTTP" patternSyntax="ECMAScript" stopProcessing="true"&gt;</div>
<div>  &lt;match url=".*" /&gt;</div>
<div>  &lt;conditions&gt;</div>
<div>    &lt;add input="{HTTP_HOST}" pattern="^domain.com$" /&gt;</div>
<div>    &lt;add input="{HTTPS}" pattern="off" /&gt;</div>
<div>  &lt;/conditions&gt;</div>
<div>  &lt;action type="Redirect" url="http://www.domain.com/{R:0}" redirectType="Permanent" appendQueryString="true"/&gt;</div>
<div>&lt;/rule&gt;</div>
<div>&lt;rule name="Redirect domain.com to www.domain.com HTTPS" patternSyntax="ECMAScript" stopProcessing="true"&gt;</div>
<div>  &lt;match url=".*" /&gt;</div>
<div>  &lt;conditions&gt;</div>
<div>    &lt;add input="{HTTP_HOST}" pattern="^domain.com$" /&gt;</div>
<div>    &lt;add input="{HTTPS}" pattern="on" /&gt;</div>
<div>  &lt;/conditions&gt;</div>
<div>  &lt;action type="Redirect" url="https://www.domain.com/{R:0}" redirectType="Permanent" appendQueryString="true"/&gt;</div>
<div>&lt;/rule&gt;</div>
</div>
<p> </p>
<p>I will see if I will stick with the shared plan since the estimated cost is almost 50$ a month. If the bill lands there then I don't see it as worth it just to have a custom domain with HTTPS. I would rather stick with .azurewebsites.net then.</p>]]></Value>
    </mainBody>
    <metaDescription>
      <Value><![CDATA[I could not get HTTPS to www redirects to work no matter how many different examples I tried. I wanted to redirect from https://domain.com to https://www.domain.com for the naked domain in Azure. I finally found the solution to the problem.]]></Value>
    </metaDescription>
    <metaTitle>
      <Value><![CDATA[]]></Value>
    </metaTitle>
    <preamble>
      <Value><![CDATA[Here is my journey in solving the problem of redirecting my naked http domain to an SSL domain with www.]]></Value>
    </preamble>
    <teaserHeading>
      <Value><![CDATA[]]></Value>
    </teaserHeading>
    <teaserMedia>
      <Value><![CDATA[{"src":"/media/wwllaivq/bingimageoftheday.jpg","focalPoint":{"left":0.5,"top":0.5},"crops":[{"alias":"startPage","width":500,"height":500,"coordinates":null}]}]]></Value>
    </teaserMedia>
    <teaserMediaAltText>
      <Value><![CDATA[]]></Value>
    </teaserMediaAltText>
    <title>
      <Value><![CDATA[How to redirect a naked http domain to an ssl protected www]]></Value>
    </title>
  </Properties>
</Content>